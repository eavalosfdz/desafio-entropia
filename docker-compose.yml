services:
  db:
    image: postgres:16-alpine
    container_name: windows_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: windows
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d windows -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 20

  ollama:
    image: ollama/ollama:latest
    container_name: windows_ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:11434/api/tags"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: windows_api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
    working_dir: /app
    environment:
      DATABASE_URL: postgresql+psycopg://app:app@db:5432/windows
      ALLOWED_ORIGINS: http://localhost:3000
      MAX_IMAGE_MB: 10
      ALLOWED_IMAGE_TYPES: image/jpeg,image/png
      OLLAMA_HOST: http://ollama:11434
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - images_data:/data/images
    command: >
      uvicorn app.main:app
      --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: windows_frontend
    restart: unless-stopped
    depends_on:
      - api
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
      PORT: 3000
      NEXT_TELEMETRY_DISABLED: "1"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  db_data:
  ollama_data:
  images_data:
